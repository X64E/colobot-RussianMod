\b;Указатели (для специалистов)
В языке CBOT указатели используются при работе с \l;классами\u cbot\class; и \l;массивами\u cbot\array;. Любая переменная в качестве типа которой указан класс, на самом деле является указателем на экземпляр класса. Экземпляр фактический содержит в себе поля классов. На один и тот же экземпляр может ссылаться несколько указателей. Указатель содержащий в себе значение \c;\l;null\u cbot\null;\n; - является "пустым" и не ссылается ни на что. Вы можете сравнить экземпляр с чемоданом, а указатель с перевозчиком. Например, каждый раз, когда нам нужет новый чемодан, мы создаем новый экземпляр перевозчика. Но чемодан может перевозиться более чем на одном носителе. Перевозчик, не имеющий груза имеет \c;\l;null\u cbot\null;\n; ссылку.

Например объявим класс и создадим указатель на него:
\c;\s;{
\s;	MyClass item1();   // Создаем указаель item1 ссылающийся
\s;	                   // на новый экземпляр класса MyClass.
\s;	MyClass item2;     // Создаем "пустой" null указатель.
\s;	item2 = item1;     // Копируем указатель.
\s;	                   // Теперь item2 и item1 указывают
\s;	                   // на один и тот же экземпляр.
\s;	item1.a = 12;      // Изменяем поле экземпляра на который
\s;	                   // указывает item1 (и item2).
\s;	message(item2.a);  // Будет выведено число 12.
\s;}
\n;
В случае, когда вы передаёте в функцию \l;класс\u cbot\class; в качестве параметра, на самом деле в функцию будет передан, только указатель на экземпляр класса, а не сам экземпляр класса. На практике это приводит к тому, что если изменить значение указывающее на класс внутри функции, то изменение на самом деле произойдет и в самом экземпляре.

\c;\s;void Test( MyClass item )
\s;{
\s;	item.a = 12;          // изменяем оригинальный экземпляр класса
\s;	item = new MyClass(); // создаем локальный экземпляр класса
\s;	item.a = 33;          // изменяем локальный экземпляр класса
\s;}
\n;
Теперь осуществим вызов функции \c;Test()\n;:

\c;\s;{
\s;	MyClass toto();
\s;	Test(toto);
\s;	message(toto.a);  // будет выведено число 12
\s;}
\n;
Экземпляр, содержащий поле \c;a = 33\n; ссылается на более новый экземпляр \c;item\n; внутри функции \c;Test\n;. В конце функции \c;Test\n; недавно созданная ссылка \c;item\n; будет автоматически удалена.

Функция может возвращать экземпляр класса:

\c;\s;MyClass Test2( )
\s;{
\s;	MyClass item = new MyClass();
\s;	item.a = 33;
\s;	return item;
\s;}
\n;
Применим функцию, в следующем примере:

\c;\s;{
\s;	MyClass toto;
\s;	toto = Test2();  // toto содержит указатель на экземпляр класса
\s;	                 // созданный функцией Test2()
\s;	message(toto.a); // будет выведено число 33
\s;}
\n;
\t;См. также
\c;\l;class\u cbot\class;\n;, \c;\l;new\u cbot\new;\n;
\l;Программирование\u cbot;, \l;типы\u cbot\type; и \l;категории\u cbot\category;.
